// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  skills    String[]
  imageUrl  String?
  createdAt DateTime @default(now())

  courses   Course[]
}

model Course {
  id        String   @id @default(cuid())
  title     String
  duration  Int
  completed Boolean  @default(false) 
  createdAt DateTime @default(now())

  userId    String
  user      User     @relation(fields: [userId], references: [id])

  topics    Topic[]
}

model Topic {
  id        String   @id @default(cuid())
  title     String
  completed Boolean  @default(false) 
  createdAt DateTime @default(now())

  courseId  String
  course    Course   @relation(fields: [courseId], references: [id])

  pages     Page[]
  quizzes   Quiz[]
  flashcards Flashcard[]
  summary   Summary?
}

model Page {
  id        String   @id @default(cuid())
  title     String
  content   String
  viewed    Boolean  @default(false) 
  createdAt DateTime @default(now())

  topicId   String
  topic     Topic    @relation(fields: [topicId], references: [id])
}

model Quiz {
  id        String   @id @default(cuid())
  question  String
  options   String[] 
  answer    String
  completed Boolean  @default(false) // quiz attempt tracking
  score     Int?
  createdAt DateTime @default(now())

  topicId   String
  topic     Topic    @relation(fields: [topicId], references: [id])
}


model Flashcard {
  id        String   @id @default(cuid())
  front     String
  back      String
  completed Boolean  @default(false) // mark as reviewed
  createdAt DateTime @default(now())

  topicId   String
  topic     Topic    @relation(fields: [topicId], references: [id])
}

model Summary {
  id        String   @id @default(cuid())
  content   String
  completed Boolean  @default(false) // mark as read
  createdAt DateTime @default(now())

  topicId   String   @unique
  topic     Topic    @relation(fields: [topicId], references: [id])
}
